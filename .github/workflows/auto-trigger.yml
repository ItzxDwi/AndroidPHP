name: Auto trigger release

on:
  schedule:
    - cron: '0 0 */2 * *'  # Every 48 hours
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  check-latest-release:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.check-release.outputs.tag_name }}
      php_version: ${{ steps.check-release.outputs.php_version }}
      new_release: ${{ steps.check-release.outputs.new_release }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch latest release
        id: fetch-release
        run: |
          curl -s https://api.github.com/repos/pmmp/PHP-Binaries/releases/tags/pm5-latest > latest.json

          FINGERPRINT=$(jq -r '.assets | map(.digest + .updated_at) | join(",")' latest.json | sha256sum | awk '{print $1}')
          PHP_VERSION=$(jq -r '.assets[0].name' latest.json | grep -oP 'PHP-\K[0-9]+\.[0-9]+')

          echo "fingerprint=$FINGERPRINT" >> $GITHUB_OUTPUT
          echo "php_version=$PHP_VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=pm5-latest" >> $GITHUB_OUTPUT
          rm latest.json
        shell: bash

      - name: Cache release info
        uses: actions/cache@v4
        with:
          path: .release-cache
          key: php-binaries-cache-${{ steps.fetch-release.outputs.fingerprint }}
          restore-keys: |
            php-binaries-cache-

      - name: Check for new release
        id: check-release
        run: |
          CURRENT_FINGERPRINT=${{ steps.fetch-release.outputs.fingerprint }}
          PHP_VERSION=${{ steps.fetch-release.outputs.php_version }}

          if [ -f ".release-cache/last-fingerprint" ]; then
            LAST_FINGERPRINT=$(cat ".release-cache/last-fingerprint")
            if [ "$CURRENT_FINGERPRINT" = "$LAST_FINGERPRINT" ]; then
              echo "No new release detected"
              echo "new_release=false" >> $GITHUB_OUTPUT
              exit 0
            fi
          fi

          mkdir -p .release-cache
          echo "$CURRENT_FINGERPRINT" > .release-cache/last-fingerprint
          echo "new_release=true" >> $GITHUB_OUTPUT
          echo "php_version=$PHP_VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=${{ steps.fetch-release.outputs.tag_name }}" >> $GITHUB_OUTPUT
        shell: bash

  run-build:
    needs: check-latest-release
    if: ${{ needs.check-latest-release.outputs.new_release == 'true' }}
    uses: ./.github/workflows/manual-release.yml
    with:
      tagname: ${{ needs.check-latest-release.outputs.tag_name }}
      php_version: ${{ needs.check-latest-release.outputs.php_version }}
      createRelease: "yes"
    secrets: inherit
